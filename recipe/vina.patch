diff --git a/build/linux/release/Makefile b/build/linux/release/Makefile
index de68dd1..8d94a09 100644
--- a/build/linux/release/Makefile
+++ b/build/linux/release/Makefile
@@ -1,9 +1,6 @@
-BASE=/usr/local
-BOOST_VERSION=
+BASE=${PREFIX}
 BOOST_INCLUDE = $(BASE)/include
-C_PLATFORM=-static -pthread
-GPP=/usr/bin/g++
+C_PLATFORM=-pthread
+GPP=${CXX}
 C_OPTIONS= -O3 -DNDEBUG -std=c++11
-BOOST_LIB_VERSION=
-
 include ../../makefile_common
diff --git a/build/mac/release/Makefile b/build/mac/release/Makefile
index 274a89b..8d94a09 100644
--- a/build/mac/release/Makefile
+++ b/build/mac/release/Makefile
@@ -1,9 +1,6 @@
-BASE=/usr/local
-BOOST_VERSION=
+BASE=${PREFIX}
 BOOST_INCLUDE = $(BASE)/include
 C_PLATFORM=-pthread
-GPP=/usr/bin/clang++
+GPP=${CXX}
 C_OPTIONS= -O3 -DNDEBUG -std=c++11
-BOOST_LIB_VERSION=
-
 include ../../makefile_common
diff --git a/build/makefile_common b/build/makefile_common
index 763d1cc..d97b0fa 100644
--- a/build/makefile_common
+++ b/build/makefile_common
@@ -12,7 +12,7 @@ C_OPTIONS+=-DVERSION=\"$(GIT_VERSION)\"
 
 # -pedantic fails on Mac with Boost 1.41 (syntax problems in their headers)
 #CC = ${GPP} ${C_PLATFORM} -ansi -pedantic -Wno-long-long ${C_OPTIONS} $(INCFLAGS)
-CC = ${GPP} ${C_PLATFORM} -ansi -Wno-long-long ${C_OPTIONS} $(INCFLAGS)
+VINA_CC = ${GPP} ${C_PLATFORM} -ansi -Wno-long-long ${C_OPTIONS} $(INCFLAGS)
 
 LDFLAGS = -L$(BASE)/lib -L.
 
@@ -21,35 +21,35 @@ LDFLAGS = -L$(BASE)/lib -L.
 # install libboost_thread-mt, but not
 # libboost_thread (e.g. macOS)
 $(shell echo "int main(){ return 0; }" > linktest.cpp)
-$(shell $(CC) $(LDFLAGS) -l boost_thread-mt${BOOST_LIB_VERSION} linktest.cpp -o linktest >/dev/null 2>&1)
+$(shell $(VINA_CC) $(LDFLAGS) -l boost_thread-mt${BOOST_LIB_VERSION} linktest.cpp -o linktest >/dev/null 2>&1)
 threadmt:=$(shell if [ -f ./linktest ]; then echo "-mt"; rm ./linktest; fi;)
 $(shell rm ./linktest.cpp)
 
-LIBS = -l boost_system${BOOST_LIB_VERSION} -l boost_thread${threadmt}${BOOST_LIB_VERSION} -l boost_serialization${BOOST_LIB_VERSION} -l boost_filesystem${BOOST_LIB_VERSION} -l boost_program_options${BOOST_LIB_VERSION}#-l pthread
+LIBS = -l boost_system -l boost_thread${threadmt} -l boost_serialization -l boost_filesystem -l boost_program_options #-l pthread
 
 .SUFFIXES: .cpp .o
 
 %.o : ../../../src/lib/%.cpp 
-	$(CC) $(CFLAGS) -o $@ -c $< 
+	$(VINA_CC) $(CFLAGS) -o $@ -c $<
 
 %.o : ../../../src/design/%.cpp 
-	$(CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $< 
+	$(VINA_CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $<
 	
 %.o : ../../../src/main/%.cpp 
-	$(CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $< 
+	$(VINA_CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $<
 
 %.o : ../../../src/split/%.cpp 
-	$(CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $< 
+	$(VINA_CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $<
 
 all: vina vina_split
 
 include dependencies
 
 vina: $(MAINOBJ) $(LIBOBJ)
-	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
+	$(VINA_CC) $(LDFLAGS) -o $@ $^ $(LIBS)
 
 vina_split: $(SPLITOBJ)
-	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)
+	$(VINA_CC) $(LDFLAGS) -o $@ $^ $(LIBS)
 
 clean:
 	rm -f *.o
diff --git a/build/python/setup.py b/build/python/setup.py
index 938732e..cf8d541 100644
--- a/build/python/setup.py
+++ b/build/python/setup.py
@@ -46,7 +46,7 @@ def in_conda():
 
 def find_version():
     """Extract the current version of AutoDock Vina.
-    
+
     The version will be obtained from (in priority order):
     1. version.py (file created only when using GitHub Actions)
     2. git describe
@@ -57,7 +57,7 @@ def find_version():
     if os.path.isfile(version_file):
         with open(version_file) as f:
             version = f.read().strip()
-        
+
         print('Version found: %s (from version.py)' % version)
         return version
 
@@ -73,8 +73,8 @@ def find_version():
         return version
     except:
         pass
-    
-    init_file = os.path.join(base_dir, 'vina', '__init__.py') 
+
+    init_file = os.path.join(base_dir, 'vina', '__init__.py')
     with open(init_file) as f:
         for line in f:
             version_match = re.match(r'^__version__ = "(.+?)"$', line)
@@ -84,7 +84,7 @@ def find_version():
 
                 print('Version found %s (from __init__.py)' % version)
                 return version
-    
+
     raise RuntimeError('Could not find version string for AutoDock Vina.')
 
 
@@ -152,7 +152,7 @@ def locate_boost():
         data_pathname = sysconfig.get_path('data')
         include_dirs = data_pathname + os.path.sep + 'include'
         library_dirs = data_pathname + os.path.sep + 'lib'
-        
+
         if os.path.isdir(include_dirs + os.path.sep + 'boost'):
             print('Boost library location automatically determined in this conda environment.')
             return include_dirs, library_dirs
@@ -294,11 +294,9 @@ class CustomBuildExt(build_ext):
             # To get the right @rpath on macos for libraries
             self.extensions[0].extra_link_args.append('-Wl,-rpath,' + self.library_dirs[0])
             self.extensions[0].extra_link_args.append('-Wl,-rpath,' + '/usr/lib')
-        
+
         print('- extra link args: %s' % self.extensions[0].extra_link_args)
 
-        # Replace current compiler to g++
-        self.compiler.compiler_so[0] = "g++"
         self.compiler.compiler_so.insert(2, "-shared")
 
         remove_flags = ["-Wstrict-prototypes", "-Wall"]
@@ -334,7 +332,7 @@ obextension = Extension(
              'src/lib/quaternion.cpp', 'src/lib/monte_carlo.cpp', 'src/lib/non_cache.cpp',
              'src/lib/mutate.cpp', 'src/lib/szv_grid.cpp', 'src/lib/quasi_newton.cpp',
              'src/lib/parallel_progress.cpp', 'src/lib/model.cpp', 'src/lib/coords.cpp',
-             'src/lib/ad4cache.cpp', 'src/lib/grid.cpp', 'src/lib/parallel_mc.cpp', 
+             'src/lib/ad4cache.cpp', 'src/lib/grid.cpp', 'src/lib/parallel_mc.cpp',
              'src/lib/conf_independent.cpp', 'src/lib/parse_pdbqt.cpp',
              'src/lib/cache.cpp', autodock_swig_interface],
     extra_link_args=['-lboost_thread', '-lboost_serialization',
@@ -358,7 +356,7 @@ setup(
     packages=['vina'],
     package_dir=package_dir,
     install_requires=['numpy>=1.18'],
-    python_requires='>=3.5.*',
+    python_requires='>=3.5',
     ext_modules=[obextension],
     #entry_points={"console_scripts": ["vina = vina.vina_cli:main"]},
     classifiers=[
